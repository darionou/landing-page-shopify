{% comment %}
  Complete Personalized Landing Page Template - All-in-one
  Modern design showing only user info and product info
  Usage: Upload this file to Shopify and create a page with template 'personalized-landing'
{% endcomment %}

<div class="personalized-landing-simple" data-page-id="personalized-landing">
  <!-- Loading State -->
  <div class="loading-container" id="loading-personalized-landing">
    <div class="loading-spinner"></div>
    <p class="loading-text">Loading your personalized content...</p>
  </div>

  <!-- Error State -->
  <div class="error-container" id="error-personalized-landing" style="display: none;">
    <div class="error-icon">⚠️</div>
    <h2 class="error-title">Welcome!</h2>
    <p class="error-message">We are having trouble loading your personalized content.</p>
    <p class="error-details" id="error-details-personalized-landing"></p>
    <button class="retry-btn" onclick="retryLoad('personalized-landing')">
      Try Again
    </button>
  </div>

  <!-- Main Content -->
  <div class="main-content" id="content-personalized-landing" style="display: none;">
    <!-- User Section -->
    <div class="user-section">
      <div class="user-avatar">
        <img id="user-avatar-personalized-landing" src="" alt="User Avatar" style="display: none;" onerror="showAvatarFallback('personalized-landing')">
        <div class="avatar-fallback" id="avatar-fallback-personalized-landing">
          <svg viewBox="0 0 100 100" fill="none">
            <circle cx="50" cy="50" r="50" fill="#e3f2fd"/>
            <circle cx="50" cy="35" r="15" fill="#1976d2"/>
            <path d="M20 80c0-16.5 13.5-30 30-30s30 13.5 30 30" fill="#1976d2"/>
          </svg>
        </div>
      </div>
      <div class="user-info">
        <h1 class="user-greeting">
          Welcome back,
          <span class="user-name" id="user-name-personalized-landing">Valued Customer</span>!
        </h1>
        <p class="user-subtitle">Here's your personalized recommendation</p>
      </div>
    </div>

    <!-- Product Section -->
    <div class="product-section">
      <div class="product-image-container">
        <img id="product-image-personalized-landing" src="" alt="Product" style="display: none;" onerror="showProductFallback('personalized-landing')">
        <div class="product-image-fallback" id="product-fallback-personalized-landing">
          <svg viewBox="0 0 200 200" fill="none">
            <rect width="200" height="200" fill="#f5f5f5" rx="12"/>
            <rect x="60" y="60" width="80" height="80" fill="#e0e0e0" rx="8"/>
            <circle cx="80" cy="80" r="8" fill="#bdbdbd"/>
            <path d="M70 110 L90 90 L110 110 L130 90" stroke="#bdbdbd" stroke-width="2" fill="none"/>
          </svg>
        </div>
      </div>
      
      <div class="product-info">
        <h2 class="product-title" id="product-title-personalized-landing">Your Special Product</h2>
        <div class="product-price" id="product-price-personalized-landing">$0.00</div>
        <p class="product-description" id="product-description-personalized-landing">
          This product has been specially selected for you based on your preferences.
        </p>
      </div>
    </div>
  </div>
</div>

<style>
  body {
    margin: 0;
    padding: 0;
    background: linear-gradient(135deg, #f5f7fa 0%, #c3cfe2 100%);
    min-height: 100vh;
    font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, 'Helvetica Neue', Arial, sans-serif;
  }

  .personalized-landing-simple {
    max-width: 1200px;
    margin: 0 auto;
    padding: 2rem 1rem;
  }

  /* Loading State */
  .loading-container {
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: center;
    min-height: 400px;
    text-align: center;
  }

  .loading-spinner {
    width: 48px;
    height: 48px;
    border: 4px solid #f3f4f6;
    border-top: 4px solid #3b82f6;
    border-radius: 50%;
    animation: spin 1s linear infinite;
    margin-bottom: 1.5rem;
  }

  @keyframes spin {
    0% { transform: rotate(0deg); }
    100% { transform: rotate(360deg); }
  }

  .loading-text {
    color: #6b7280;
    font-size: 1.1rem;
    margin: 0;
  }

  /* Error State */
  .error-container {
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: center;
    min-height: 400px;
    text-align: center;
    padding: 2rem;
  }

  .error-icon {
    font-size: 4rem;
    margin-bottom: 1rem;
  }

  .error-title {
    font-size: 2rem;
    font-weight: 700;
    color: #1f2937;
    margin: 0 0 1rem 0;
  }

  .error-message {
    color: #6b7280;
    font-size: 1.1rem;
    margin: 0 0 1rem 0;
    max-width: 500px;
    line-height: 1.6;
  }

  .error-details {
    color: #ef4444;
    font-size: 0.95rem;
    margin: 0 0 2rem 0;
    max-width: 500px;
    line-height: 1.4;
    font-weight: 500;
    background: #fef2f2;
    padding: 0.75rem 1rem;
    border-radius: 6px;
    border-left: 4px solid #ef4444;
  }

  .retry-btn {
    background: #3b82f6;
    color: white;
    border: none;
    padding: 0.875rem 2rem;
    border-radius: 8px;
    font-size: 1rem;
    font-weight: 600;
    cursor: pointer;
    transition: all 0.2s ease;
  }

  .retry-btn:hover {
    background: #2563eb;
    transform: translateY(-1px);
  }

  /* Main Content */
  .main-content {
    display: grid;
    grid-template-columns: 1fr 1fr;
    gap: 4rem;
    align-items: start;
    animation: fadeIn 0.6s ease-out;
  }

  @keyframes fadeIn {
    from { opacity: 0; transform: translateY(20px); }
    to { opacity: 1; transform: translateY(0); }
  }

  /* User Section */
  .user-section {
    background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
    border-radius: 20px;
    padding: 3rem 2rem;
    text-align: center;
    color: white;
    box-shadow: 0 20px 25px -5px rgba(0, 0, 0, 0.1), 0 10px 10px -5px rgba(0, 0, 0, 0.04);
  }

  .user-avatar {
    width: 120px;
    height: 120px;
    margin: 0 auto 2rem;
    position: relative;
  }

  .user-avatar img,
  .avatar-fallback {
    width: 100%;
    height: 100%;
    border-radius: 50%;
    object-fit: cover;
    border: 4px solid rgba(255, 255, 255, 0.2);
  }

  .avatar-fallback svg {
    width: 100%;
    height: 100%;
  }

  .user-greeting {
    font-size: 2.25rem;
    font-weight: 800;
    margin: 0 0 0.5rem 0;
    line-height: 1.2;
  }

  .user-name {
    display: block;
    color: #fbbf24;
  }

  .user-subtitle {
    font-size: 1.125rem;
    opacity: 0.9;
    margin: 0;
    font-weight: 300;
  }

  /* Product Section */
  .product-section {
    background: white;
    border-radius: 20px;
    padding: 2rem;
    box-shadow: 0 20px 25px -5px rgba(0, 0, 0, 0.1), 0 10px 10px -5px rgba(0, 0, 0, 0.04);
    border: 1px solid #f3f4f6;
  }

  .product-image-container {
    width: 100%;
    height: 280px;
    margin-bottom: 2rem;
    border-radius: 16px;
    overflow: hidden;
    background: #f9fafb;
  }

  .product-image-container img,
  .product-image-fallback {
    width: 100%;
    height: 100%;
    object-fit: cover;
  }

  .product-image-fallback {
    display: flex;
    align-items: center;
    justify-content: center;
    background: #f9fafb;
  }

  .product-image-fallback svg {
    width: 120px;
    height: 120px;
  }

  .product-title {
    font-size: 1.875rem;
    font-weight: 700;
    color: #1f2937;
    margin: 0 0 1rem 0;
    line-height: 1.3;
  }

  .product-price {
    font-size: 2rem;
    font-weight: 800;
    color: #059669;
    margin-bottom: 1.5rem;
  }

  .product-description {
    color: #6b7280;
    font-size: 1rem;
    line-height: 1.6;
    margin: 0;
  }

  /* Responsive Design */
  @media (max-width: 768px) {
    .personalized-landing-simple {
      padding: 1rem;
    }

    .main-content {
      grid-template-columns: 1fr;
      gap: 2rem;
    }

    .user-section {
      padding: 2rem 1.5rem;
    }

    .user-avatar {
      width: 100px;
      height: 100px;
    }

    .user-greeting {
      font-size: 1.875rem;
    }

    .product-section {
      padding: 1.5rem;
    }

    .product-image-container {
      height: 220px;
    }

    .product-title {
      font-size: 1.5rem;
    }

    .product-price {
      font-size: 1.75rem;
    }
  }

  @media (max-width: 480px) {
    .user-greeting {
      font-size: 1.5rem;
    }

    .product-title {
      font-size: 1.25rem;
    }

    .product-price {
      font-size: 1.5rem;
    }
  }

  /* Accessibility */
  @media (prefers-reduced-motion: reduce) {
    .loading-spinner {
      animation: none;
    }

    .main-content {
      animation: none;
    }

    .retry-btn:hover {
      transform: none;
    }
  }
</style>

<script>
  document.addEventListener('DOMContentLoaded', function() {
    initializeLanding('personalized-landing');
  });

  function initializeLanding(pageId) {
    const urlParams = new URLSearchParams(window.location.search);
    const userId = urlParams.get('user_id');

    if (!userId) {
      showError(pageId, 'No user ID provided');
      return;
    }

    fetchData(userId, pageId);
  }

  function fetchData(userId, pageId) {
    const proxyUrl = `/apps/personalized-landing/proxy/user-landing?user_id=${encodeURIComponent(userId)}`;

    fetch(proxyUrl, {
      method: 'GET',
      headers: {
        'Content-Type': 'application/json',
        'Accept': 'application/json'
      }
    })
    .then(response => {
      // Always parse JSON first, regardless of status
      return response.json().then(data => {
        console.log('API Response (status ' + response.status + '):', data); // Debug log
        
        if (!response.ok) {
          // If we have an error message in the response, use it
          if (data.error) {
            throw new Error(`api_error:${data.error}`);
          } else {
            throw new Error(`HTTP error! status: ${response.status}`);
          }
        }
        return data;
      });
    })
    .then(data => {
      if (data.success && data.data) {
        displayContent(data.data, pageId);
      } else {
        // Check for specific error types in the response
        let errorType = 'general';
        let errorMessage = data.error || 'Failed to load content';
                
        if (data.error) {
          if (data.error.toLowerCase().includes('customer not found') || 
              data.error.toLowerCase().includes('customer does not exist')) {
            errorType = 'customer_not_found';
            console.log('Detected customer_not_found error'); // Debug log
          } else if (data.error.toLowerCase().includes('invalid customer id') ||
                     data.error.toLowerCase().includes('invalid id format')) {
            errorType = 'invalid_customer_id';
            console.log('Detected invalid_customer_id error'); // Debug log
          }
        }
        
        throw new Error(`${errorType}:${errorMessage}`);
      }
    })
    .catch(error => {
      console.error('Error:', error);
      showError(pageId, error.message);
    });
  }

  function displayContent(userData, pageId) {
    // Hide loading
    document.getElementById(`loading-${pageId}`).style.display = 'none';

    // Update user info
    if (userData.first_name) {
      document.getElementById(`user-name-${pageId}`).textContent = userData.first_name;
    }

    if (userData.profile_image_url) {
      const avatar = document.getElementById(`user-avatar-${pageId}`);
      avatar.src = userData.profile_image_url;
      avatar.style.display = 'block';
      document.getElementById(`avatar-fallback-${pageId}`).style.display = 'none';
    }

    // Update product info
    if (userData.assigned_product) {
      const product = userData.assigned_product;
      
      if (product.title) {
        document.getElementById(`product-title-${pageId}`).textContent = product.title;
      }

      if (product.price) {
        document.getElementById(`product-price-${pageId}`).textContent = formatPrice(product.price);
      }

      if (product.description) {
        document.getElementById(`product-description-${pageId}`).textContent = product.description;
      }

      if (product.image_url) {
        const productImg = document.getElementById(`product-image-${pageId}`);
        productImg.src = product.image_url;
        productImg.style.display = 'block';
        document.getElementById(`product-fallback-${pageId}`).style.display = 'none';
      }
    }

    // Show content
    document.getElementById(`content-${pageId}`).style.display = 'block';
  }

  function showError(pageId, message) {
    document.getElementById(`loading-${pageId}`).style.display = 'none';
    
    const [errorType, errorMessage] = message.includes(':') ? message.split(':', 2) : ['general', message];
    
    console.log('showError - errorType:', errorType, 'errorMessage:', errorMessage); // Debug log
    
    // Update error content
    const errorContainer = document.getElementById(`error-${pageId}`);
    const errorTitle = errorContainer.querySelector('.error-title');
    const errorMainMessage = errorContainer.querySelector('.error-message');
    const errorDetails = document.getElementById(`error-details-${pageId}`);
    errorTitle.textContent = 'Welcome!';
    errorMainMessage.textContent = 'We are having trouble loading your personalized content.';
    
    // Show specific details based on error type or message content
    if (errorType === 'api_error' && errorMessage.toLowerCase().includes('customer not found')) {
      errorDetails.textContent = 'Issue: Customer not found with the provided ID. Please verify the link is correct.';
      errorDetails.style.display = 'block';
    } else if (errorType === 'customer_not_found') {
      errorDetails.textContent = 'Issue: Customer not found with the provided ID. Please verify the link is correct.';
      errorDetails.style.display = 'block';
    } else if (errorType === 'invalid_customer_id') {
      errorDetails.textContent = 'Issue: Invalid customer ID format. Please check the link format.';
      errorDetails.style.display = 'block';
    } else if (errorMessage.toLowerCase().includes('network') || errorMessage.toLowerCase().includes('connection')) {
      errorDetails.textContent = 'Issue: Network connection problem. Please check your internet connection.';
      errorDetails.style.display = 'block';
    } else if (errorMessage.toLowerCase().includes('timeout')) {
      errorDetails.textContent = 'Issue: Request timed out. The server may be busy, please try again.';
      errorDetails.style.display = 'block';
    } else {
      errorDetails.style.display = 'none';
    }
    
    errorContainer.style.display = 'flex';
    console.error('Landing page error:', message);
  }

  function retryLoad(pageId) {
    document.getElementById(`error-${pageId}`).style.display = 'none';
    document.getElementById(`loading-${pageId}`).style.display = 'flex';
    initializeLanding(pageId);
  }

  function showAvatarFallback(pageId) {
    document.getElementById(`user-avatar-${pageId}`).style.display = 'none';
    document.getElementById(`avatar-fallback-${pageId}`).style.display = 'block';
  }

  function showProductFallback(pageId) {
    document.getElementById(`product-image-${pageId}`).style.display = 'none';
    document.getElementById(`product-fallback-${pageId}`).style.display = 'flex';
  }

  function formatPrice(price) {
    if (typeof price === 'string') return price;
    return `$${(price / 100).toFixed(2)}`;
  }
</script>